openapi: 3.0.1
info:
  version: 1.0.0
  title: subscriptions-service-test
  description: |
    Microservice responsible for managing subscriptions (Frontend)
tags:
  - name: status
  - name: v1
paths:
  /fe/v1/subscriptions:
    get:
      tags:
        - v1
      summary: Get the subscriptions for the authenticated user.
      operationId: getSubscriptionDetails
      description: Get the subscriptions for the authenticated user. Currently the
        user can only have one active subscription.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      responses:
        "200":
          description: Subscription details for the user
          content:
            application/json:
              schema: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: The service could not complete the request
          content:
            application/json:
              schema: {}
  "/fe/v1/subscriptions/{subscriptionId}/cancel":
    post:
      tags:
        - v1
      summary: Cancel a user's subscription.
      operationId: cancelSubscription
      description: Cancel the subscription for the user.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
        - in: path
          name: subscriptionId
          schema:
            type: string
            example: 758f9d14-a6b2-4224-8bc5-dc99976c996b
          required: true
          description: The ID of the subscription
      requestBody:
        description: Cancellation details
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /fe/v1/subscriptions/latest/pause:
    post:
      tags:
        - v1
      summary: Pauses user's subscription.
      operationId: pauseSubscription
      description: Pauses the subscription for the user. User must be in active state
        OR he should have resumeDate if he's in suspended state. This is
        applicable only for monthly users.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      requestBody:
        description: Pause action details
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /fe/v1/subscriptions/latest:
    put:
      tags:
        - v1
      summary: Generic endpoint to update properties of the subscription.
      operationId: udpateSubscription
      description: Generic endpoint to update properties of the subscription. These
        does not include state changing (pause, resume, cancel, keep etc). The
        properties can include custom properties. API accepts all the fields
        specified in this api
        https://www.zuora.com/developer/api-reference/#operation/PUT_Subscription
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      requestBody:
        description: Update subscription fields to update, as per zuora put subscription
          api documentation
          https://www.zuora.com/developer/api-reference/#operation/PUT_Subscription
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /fe/v1/subscriptions/latest/resume:
    post:
      tags:
        - v1
      summary: Resumes user's subscription.
      operationId: resumeSubscription
      description: Resumes the subscription for the user. This is applicable only for
        monthly users. Not applicable for gift code users.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /fe/v1/subscriptions/latest/pause-end-date:
    patch:
      tags:
        - v1
      summary: Changes pause end date of the subscription
      operationId: changePauseEndDate
      description: Updates the pause end date for the user. User must be in paused
        state and he should have pauseEndDate > today. This is applicable only
        for monthly users. This is enabled for specific countries, which might
        change in future. Currently supported countries are
        at,br,ca,ch,de,es,it,jp,us
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      requestBody:
        description: Change pause end date payload
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /fe/v1/subscriptions/latest/cancel-pause-schedule:
    post:
      tags:
        - v1
      summary: Cancel a scheduled pause for a subscription
      operationId: cancelPauseSchedule
      description: When a subscription is scheduled to be paused in a future date, the
        future amendments should be deleted
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  "/fe/v1/subscriptions/{subscriptionId}/keep":
    post:
      tags:
        - v1
      summary: Keep a user's subscription.
      operationId: keepSubscription
      description: Keep the subscription for the user.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
        - in: path
          name: subscriptionId
          schema:
            type: string
            example: 758f9d14-a6b2-4224-8bc5-dc99976c996b
          required: true
          description: The ID of the subscription
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  "/fe/v1/subscriptions/{subscriptionId}/ratePlan":
    put:
      tags:
        - v1
      summary: Cross grades a user's subscription
      operationId: crossGrade
      description: Cross grades a user's subscription
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
        - in: path
          name: subscriptionId
          schema:
            type: string
            example: 758f9d14-a6b2-4224-8bc5-dc99976c996b
          required: true
          description: The ID or name of the subscription
      requestBody:
        description: Crossgrade details
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  "/fe/v1/subscriptions/{subscriptionId}/crossgrade":
    delete:
      tags:
        - v1
      summary: Reverts a crossgrade that was done on a subscription
      operationId: undoCrossGrade
      description: Reverts a crossgrade that was done on a subscription
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
        - in: path
          name: subscriptionId
          schema:
            type: string
            example: 758f9d14-a6b2-4224-8bc5-dc99976c996b
          required: true
          description: The ID or name of the subscription
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /fe/v1/payment-method:
    get:
      tags:
        - v1
      summary: Get user's payment method.
      operationId: getPaymentMethodFrontendV1
      description: Get payment details and payment reference id for the user.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      responses:
        "200":
          description: Payment method details for the user
          content:
            application/json:
              schema: {}
              example: {}
        "400":
          description: Request was invalid
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: {}
  /fe/v1/payment-method/paypal:
    post:
      tags:
        - v1
      summary: Create payment method and mark it as default payment method
      operationId: createPaymentMethodPaypalFrontendV1
      description: Create payment method and mark it as default payment method
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      requestBody:
        description: Create payment method details
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: Request was invalid
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: {}
  /fe/v1/payment-method/credit-card:
    post:
      tags:
        - v1
      summary: Create payment method and mark it as default payment method
      operationId: createPaymentMethodCreditCardFrontendV1
      description: Create payment method and mark it as default payment method
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      requestBody:
        description: Create payment method details
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: Request was invalid
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: {}
  /fe/v1/payment-history:
    get:
      tags:
        - v1
      summary: Get user's payment history
      operationId: getPaymentHistoryv1
      description: Get payment history for the logged in user
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      responses:
        "200":
          description: Payment History for the user
          content:
            application/json:
              schema: {}
              example:
                - id: 2c92c0f86850ebea0168723fd9ef6f0c
                  date: 2019-11-23T10:18:05.659Z
                  paymentId: 2c92c0f86850ebea0168723fda656f19
                  paymentMethod:
                    type: BankTransfer
                    details:
                      bankTransferAccountNumberMask: DE****************6020
                  currency: EUR
                  subtotal: 9.99
                  tax: 0
                  total: 9.99
        "400":
          description: Request was invalid
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: {}
  /fe/v1/account/contact:
    put:
      tags:
        - v1
      summary: Update user's contact.
      operationId: updateContact
      description: Update billTo and soldTo contact of the user with the provided fields.
      security:
        - BearerAuthJWT: []
      parameters:
        - {}
      requestBody:
        description: Contact
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "201":
          description: The request has been successfully submitted for processing
        "400":
          description: The request has some conflicting information
          content:
            application/json:
              schema: {}
        "401":
          description: Request not authenticated
          content:
            application/json:
              schema: {}
        "404":
          description: DAZN user could not be found
          content:
            application/json:
              schema: {}
        "500":
          description: Service unavailable
          content:
            application/json:
              schema: {}
  /version:
    get:
      tags:
        - status
      summary: returns microservice metadata
      operationId: getHealth
      description: returns details such as author, commit hash, name and version of
        the microservice
      responses:
        "200":
          description: the service is alive
          content:
            application/json:
              schema: {}
servers:
  - url: https://subscriptions-service-{environment}.dazndev.com
    variables:
      environment:
        enum:
          - dev
          - test
          - stage
        default: dev
  - url: https://subscriptions-service.dazn-api.com
components:
  securitySchemes:
    BearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SubscriptionDetails:
      type: object
      required:
        - id
        - status
        - inProgress
      properties:
        id:
          type: string
          example: 03794eda-25e8-4be8-99e1-632c3c5a3805
          description: Identifier of the user's subscription
        startDate:
          type: string
          nullable: true
          example: 2018-03-31T15:00:00.000Z
          description: ISO 8601 date the subscription was created
        nextPaymentDate:
          type: string
          nullable: true
          example: 2018-03-31T15:00:00.000Z
          description: ISO 8601 date of next payment
        status:
          type: string
          enum:
            - Active
            - Cancelled
            - Expired
            - Suspended
          description: Subscription status
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethodDetails"
        activePass:
          type: object
          properties:
            currency:
              type: string
              nullable: true
              example: EUR
              description: Currency of the subscription
            price:
              type: number
              nullable: true
              example: 9.99
              description: Price of the subscription
            period:
              type: string
              nullable: true
              example: month
              description: Billing period of the subscription
        inProgress:
          type: string
          enum:
            - NONE
            - SUBSCRIPTION_CANCEL
            - SUBSCRIPTION_KEEP
            - SUBSCRIPTION_CROSSGRADE
            - SUBSCRIPTION_UNDO_CROSSGRADE
            - SUBSCRIPTION_PAUSE
            - SUBSCRIPTION_RESUME
            - PAYMENT_METHOD
            - APPLY_GIFTCODE
          description: Indicating whether we are awaiting confirmation of an action result
            of this account
        canCancelKeep:
          type: boolean
          description: Whether a subscription can be cancelled or kept
        crossGradeCreatedDate:
          type: string
          nullable: true
          example: 2018-03-31T15:00:00.000Z
          description: Date of when the cross grade request was made
        pauseEndDate:
          type: string
          nullable: true
          example: 2018-03-31T15:00:00.000Z
          description: Date of when the subscription resumes
        pauseStartDate:
          type: string
          nullable: true
          example: 2018-03-31T15:00:00.000Z
          description: Date of when the subscription pauses. This is the last date of the
            billing cycle in which user pauses the subscription
        zipCode:
          type: string
          nullable: true
          example: 1234AB
          description: The subscription owners zip code, sent if it exists on Zuora
        requestRenewal:
          type: string
          enum:
            - true
            - false
            - notApplicable
          nullable: true
          example: "true"
          description: A value indicating if the user needs to give consent to their next
            subscription renewal. true means they still need to give consent,
            false means they already gave consent for the current subscription
            period, notApplicable means this user never needs to give consent
    CancelSubscription:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          enum:
            - DEVICE_NOT_SUPPORTED
            - DISLIKE_LAYOUT
            - PRICE
            - SPORT_NOT_AVAILABLE
            - SERVICE_NOT_USED
            - COMPETITOR_SWITCH
            - POOR_QUALITY
            - DISLIKE_COMMENTATING
            - BUFFERING
            - OTHER
          example: SPORT_NOT_AVAILABLE
          description: Pick list reason why the user is cancelling
        comment:
          type: string
          example: I want to watch Champions League football
          description: Free form cancel comment field
          minLength: 0
          maxLength: 255
    PauseSubscription:
      type: object
      required:
        - pauseEndDate
        - originCountryCode
      properties:
        pauseEndDate:
          type: string
          format: date
          example: 2020-12-01
          description: Date on which user wants to resume his subscription
        originCountryCode:
          type: string
          example: de
          description: Origin country of the user. one that is returned by user service
    Contact:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        country:
          type: string
        county:
          type: string
        fax:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        homePhone:
          type: string
        mobilePhone:
          type: string
        nickName:
          type: string
        otherPhone:
          type: string
        otherPhoneType:
          type: string
        personalEmail:
          type: string
          format: email
        state:
          type: string
          description: must be a valid state or province name or 2-character abbreviation
        taxRegion:
          type: string
          description: If using Zuora Tax, a region string as optionally defined in your
            tax rules. Not required.
        workEmail:
          type: string
          maxLength: 80
        zipCode:
          type: string
    ChangePauseEndDate:
      type: object
      required:
        - pauseEndDate
        - originCountryCode
      properties:
        pauseEndDate:
          type: string
          format: date
          example: 2020-12-01
          description: Date on which user wants to resume his subscription
        originCountryCode:
          type: string
          example: de
          description: Origin country of the user. one that is returned by user service
    CrossGrade:
      type: object
      required:
        - targetProductRatePlanId
      properties:
        targetProductRatePlanId:
          type: string
          example: "123"
          description: Id of the product rate plan the user should be cross graded to
          maxLength: 255
    PaymentMethodDetails:
      type: object
      nullable: true
      description: An `object` or `null` if a payment method is not set.
      oneOf:
        - $ref: "#/components/schemas/PaymentMethodDetailsCreditCard"
        - $ref: "#/components/schemas/PaymentMethodDetailsPayPal"
        - $ref: "#/components/schemas/PaymentMethodDetailsDirectDebit"
        - $ref: "#/components/schemas/PaymentMethodExternal"
        - $ref: "#/components/schemas/PaymentMethodDetailsOther"
    PaymentMethodDetailsCreditCard:
      type: object
      required:
        - type
        - details
      properties:
        type:
          type: string
          enum:
            - CreditCard
            - CreditCardReferenceTransaction
          example: CreditCard
        details:
          type: object
          required:
            - creditCardMaskNumber
            - creditCardExpirationMonth
            - creditCardType
            - creditCardExpirationYear
            - recurringDetailReference
          properties:
            creditCardMaskNumber:
              type: string
              example: "************1234"
              description: Masked credit card number
            creditCardExpirationMonth:
              type: string
              example: "03"
            creditCardType:
              type: string
              example: mastercard
            creditCardExpirationYear:
              type: string
              example: "2030"
            recurringDetailReference:
              type: string
              example: "8315299256623156"
              description: Returns the id that uniquely identifies the recurring detail
                reference
    PaymentMethodDetailsPayPal:
      type: object
      required:
        - type
        - details
      properties:
        type:
          type: string
          example: PayPal
        details:
          type: object
          required:
            - baId
            - payerEmail
          properties:
            baId:
              type: string
              description: The PayPal billing agreement ID.
              example: I-0CW68745TE4478306
            payerEmail:
              type: string
              format: email
              description: The email address associated with the account holder's PayPal
                account or of the PayPal account of the person paying for the
                service.
    PaymentMethodDetailsDirectDebit:
      type: object
      required:
        - type
        - details
      properties:
        type:
          type: string
          example: BankTransfer
        details:
          type: object
          required:
            - bankTransferAccountNumberMask
          properties:
            bankTransferAccountNumberMask:
              type: string
              example: DE*************1234
        pending:
          type: boolean
    PaymentMethodExternal:
      type: object
      required:
        - type
        - details
      properties:
        type:
          type: string
          example: External
        details:
          type: object
          required:
            - provider
          properties:
            provider:
              type: string
              example: apple
        pending:
          type: boolean
    PaymentMethodDetailsOther:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          example: Other
        details:
          type: object
          nullable: true
          properties:
            provider:
              type: string
              example: GiftCode
        pending:
          type: boolean
    PaymentHistoryDetails:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: 2c92c0f86850ebea0168723fd9ef6f0c
            description: The id of the invoice
          date:
            type: string
            example: 2019-11-23T10:18:05.659Z
            description: The date of creation of the invoice
          paymentId:
            type: string
            example: 2c92c0f86850ebea0168723fda656f19
            description: The id of the payment
          paymentMethod:
            type: object
            oneOf:
              - $ref: "#/components/schemas/PaymentMethodDetailsCreditCard"
              - $ref: "#/components/schemas/PaymentMethodDetailsPayPal"
              - $ref: "#/components/schemas/PaymentMethodDetailsDirectDebit"
          currency:
            type: string
            example: EUR
            description: The ISO-4217 code for the currency of the payment
          subtotal:
            type: number
            example: 9.99
            description: The value of the payment minus the taxes
          tax:
            type: number
            example: 0
            description: The total value of taxes
          total:
            type: number
            example: 9.99
            description: The subtotal plus taxes
    Version:
      type: object
      properties:
        author:
          type: string
          example: joe.bloggs@dazn.com
        commit:
          type: string
          example: 03846d9a3ed3d0c04dd81f91ae25746e8e25a7ea
        serviceName:
          type: string
          example: subscriptions
        version:
          type: string
          example: 1.0.0
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: number
              example: 123
            message:
              type: object
              properties:
                lang:
                  type: string
                  example: en-gb
                value:
                  type: string
                  example: Error description
    FrontendServerError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              example: "02000"
            message:
              type: object
              properties:
                lang:
                  type: string
                  example: en-US
                value:
                  type: string
                  example: The service could not complete the request
    FrontendBadRequestError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              example: "02001"
            message:
              type: object
              properties:
                lang:
                  type: string
                  example: en-US
                value:
                  type: string
                  example: Bad request
    FrontendUnauthorizedError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              example: "20000"
            message:
              type: object
              properties:
                lang:
                  type: string
                  example: en-US
                value:
                  type: string
                  example: Missing or invalid access token
    FrontendDaznUserIdNotFoundError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              example: "02002"
            message:
              type: object
              properties:
                lang:
                  type: string
                  example: en-US
                value:
                  type: string
                  example: DaznUserId is not found
  parameters:
    Authorization:
      in: header
      name: Authorization
      description: The logged in user's JWT token, in the format Bearer.
      schema:
        type: string
      required: true
  examples:
    paymentDetailsResponse:
      value:
        Example for CreditCard type:
          type: CreditCard
          details:
            creditCardMaskNumber: "************1234"
            creditCardExpirationMonth: "03"
            creditCardType: mastercard
            creditCardExpirationYear: "2030"
            recurringDetailReference: "8315299256623156"
        Example for PayPal type:
          type: PayPal
          details:
            payerEmail: somw@ex.com
            baId: "8315299256623156"
        Example for DirectDebit type:
          type: BankTransfer
          details:
            bankTransferAccountNumberMask: DE*************1234
        Example for External type:
          type: External
          details:
            provider: apple
        Example for Other type:
          type: Other
